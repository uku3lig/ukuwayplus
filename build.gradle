plugins {
    id "fabric-loom" version "1.3-SNAPSHOT"
    id "maven-publish"
    id 'io.github.juuxel.loom-quiltflower' version '1.9.+'
}

version = "$mod_version-$release_type+build.$build_number-$project.minecraft_version"
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

loom {
    accessWidenerPath = file("src/main/resources/hideaway_plus.accesswidener")
}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
    maven { url "https://maven.shedaniel.me/" }
    maven { url 'https://maven.wispforest.io' }
    maven { url = "https://maven.isxander.dev/releases" }
    maven { url = 'https://maven.quiltmc.org/repository/release' }
    maven { url = 'https://maven.quiltmc.org/repository/snapshot' }
    maven {
        name = 'ParchmentMC'
        url = 'https://maven.parchmentmc.org'
    }
    maven { url = "https://maven.terraformersmc.com/" }
    maven { url = "https://pkgs.dev.azure.com/djtheredstoner/DevAuth/_packaging/public/maven/v1" }
}

dependencies {
    minecraft libs.minecraft
    mappings loom.layered {
        it.mappings("org.quiltmc:quilt-mappings:${libs.versions.quilt.mappings.get()}:intermediary-v2")
        it.parchment("org.parchmentmc.data:parchment-1.20.1:${libs.versions.parchment.get()}@zip")
        it.officialMojangMappings()
    }
    modImplementation libs.fabric.loader
    modImplementation (libs.bundles.fabric)

    modRuntimeOnly ("com.terraformersmc:modmenu:7.2.2")

    annotationProcessor modImplementation("io.wispforest:owo-lib:${libs.versions.owolib.get()}")
    include("io.wispforest:owo-sentinel:${libs.versions.owolib.get()}")

    implementation include("io.github.CDAGaming:DiscordIPC:0.8.1")

    modRuntimeOnly("me.djtheredstoner:DevAuth-fabric:1.1.2")
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
    filesMatching("Constants.java") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.getRelease().set(17)
}

java {
    withSourcesJar()
    toolchain.getLanguageVersion().set(JavaLanguageVersion.of(17))
}

jar {
    from("LICENSE") {
        rename { "${it}_${base.archivesName.get()}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {}
}
